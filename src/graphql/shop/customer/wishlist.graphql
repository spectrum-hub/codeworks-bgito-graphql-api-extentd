#Shop\Customer\Wishlist Related APIs
extend type Query @guard(with: ["api"]) {
    wishlists(
        input: FilterWislistInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\WishlistQuery")
    ): [Wishlist!] @paginate(
        type: "PAGINATOR"
        model: "Webkul\\Customer\\Models\\Wishlist"
        defaultCount: 10
    )

    wishlist(
        id: ID @eq
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\WishlistQuery@getItem")
    ): Wishlist @find(model: "Webkul\\Customer\\Models\\Wishlist")
}

extend type Mutation @guard(with: ["api"]) {
    addToWishlist(
        productId: ID! @rename(attribute: "product_id")
    ): WishlistResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\WishlistMutation@store")

    removeFromWishlist(
        productId: ID! @rename(attribute: "product_id")
    ): WishlistResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\WishlistMutation@delete")

    moveToCart(
        id: ID!
        quantity: Int!
    ): WishlistResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\WishlistMutation@move")

    removeAllWishlists: StatusResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\WishlistMutation@deleteAll")
}

input FilterWislistInput {
    id: Int
    productId: Int @rename(attribute: "product_id")
    productName: String @rename(attribute: "product_name")
    channelId: Int @rename(attribute: "channel_id")
}

type WishlistResponse {
    success: Boolean
    message: String
    wishlist: [Wishlist] @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\WishlistQuery@getWishlists")
}

type Wishlist {
    id: ID!
    channelId: ID! @rename(attribute: "channel_id")
    productId: ID! @rename(attribute: "product_id")
    customerId: ID @rename(attribute: "customer_id")
    additional: [FilterOption] @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\WishlistQuery@getAdditionData")
    movedToCart: Boolean @rename(attribute: "moved_to_cart")
    shared: Boolean
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
    product: Product! @belongsTo(relation: "product")
    channel: Channel! @belongsTo(relation: "channel")
    customer: Customer @belongsTo(relation: "customer")
}
