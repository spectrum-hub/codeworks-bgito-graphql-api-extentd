extend type Query {
    blogs(
        input: FilterBlogInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\Blog\\FilterBlogs")
    ): [BlogType!] 
    @paginate(
        type: "PAGINATOR"
        defaultCount: 10
        model: "Webkul\\GraphQLAPI\\Models\\Blog\\Blog"
    )

    blog(id: ID! @eq): BlogType 
    @find(model: "Webkul\\GraphQLAPI\\Models\\Blog\\Blog")
}

input FilterBlogInput {
    id: Int
    name: String @rename(attribute: "name")
    slug: String @rename(attribute: "slug")
}

type BlogType {
    id: ID!
    name: String
    slug: String
    shortDescription: String @rename(attribute: "short_description")
    description: String
    author: String
    authorId: ID @rename(attribute: "author_id")
    channels: [Channel!] @belongsToMany(relation: "channels")
    assignCategorys: [AssignCategoryType!] @rename(attribute: "assign_categorys")
    srcUrl: String @rename(attribute: "src_url")
    status: Boolean
    allowComments: Boolean @rename(attribute: "allow_comments")
    metaTitle: String @rename(attribute: "meta_title")
    metaDescription: String @rename(attribute: "meta_description")
    metaKeywords: String @rename(attribute: "meta_keywords")
    publishedAt: DateTime @rename(attribute: "published_at")
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
}

type AssignCategoryType {
    id: ID!
    name: String!
    metaDescription: String @rename(attribute: "meta_description")
    metaTitle: String @rename(attribute: "meta_title")
    pageTitle: String @rename(attribute: "page_title")
    metaKeywords: String @rename(attribute: "meta_keywords")
    htmlContent: String @rename(attribute: "html_content")
    locale: String!
}

type Channel {
    id: ID!
    name: String!
}
