# Seles\Invoice Related APIs
extend type Query @guard(with: ["admin-api"]) {
    invoices(
        input: FilterInvoiceInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\Sales\\Invoices\\FilterInvoice")
    ): [Invoice!] @paginate(
        type: "PAGINATOR"
        defaultCount: 10
        model: "Webkul\\Sales\\Models\\Invoice"
    )

    invoice(id: ID @eq): Invoice @find(model: "Webkul\\Sales\\Models\\Invoice")

    invoiceItems(
        input: FilterInvoiceItemInput!
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\CommonFilter")
    ): [InvoiceItem!] @paginate(
        type: "PAGINATOR"
        defaultCount: 10
        model: "Webkul\\Sales\\Models\\InvoiceItem"
    )

    invoiceItem(
        id: ID @eq,
        input: FilterInvoiceItemInput!
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\CommonFilter")
    ): InvoiceItem @find(model: "Webkul\\Sales\\Models\\InvoiceItem")
}

extend type Mutation @guard(with: ["admin-api"]) {
    createInvoice(
        input: CreateInvoiceInput! @spread
    ): InvoiceResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Sales\\Invoices\\InvoiceMutation@store")
}

input FilterInvoiceInput {
    id: Int
    orderId: Int @rename(attribute: "order_id")
    grandTotal: Float @rename(attribute: "grand_total")
    invoiceDate: String @rename(attribute: "invoice_date")
}

input FilterInvoiceItemInput {
    invoiceId: Int! @rename(attribute: "invoice_id")
    id: Int
    name: String
    sku: String
    qty: Int
    price: Float
    orderItemId: Int @rename(attribute: "order_item_id")
}

input CreateInvoiceInput {
    orderId: Int! @rename(attribute: "order_id")
    canCreateTransaction: Boolean! @rename(attribute: "can_create_transaction")
    invoiceData: [InvoiceDataInput!]! @rename(attribute: "invoice_data")
}

input InvoiceDataInput {
    orderItemId: Int! @rename(attribute: "order_item_id")
    quantity: Int!
}

type InvoiceResponse {
    success: Boolean!
    message: String
    invoice: Invoice
}

type Invoice {
    id: Int!
    incrementId: String @rename(attribute: "increment_id")
    state: String
    emailSent: Int @rename(attribute: "email_sent")
    totalQty: Int @rename(attribute: "total_qty")
    baseCurrencyCode: String @rename(attribute: "base_currency_code")
    channelCurrencyCode: String @rename(attribute: "channel_currency_code")
    orderCurrencyCode: String @rename(attribute: "order_currency_code")
    subTotal: Float @rename(attribute: "sub_total")
    baseSubTotal: Float @rename(attribute: "base_sub_total")
    grandTotal: Float @rename(attribute: "grand_total")
    baseGrandTotal: Float @rename(attribute: "base_grand_total")
    shippingAmount: Float @rename(attribute: "shipping_amount")
    baseShippingAmount: Float @rename(attribute: "base_shipping_amount")
    taxAmount: Float @rename(attribute: "tax_amount")
    baseTaxAmount: Float @rename(attribute: "base_tax_amount")
    discountAmount: Float @rename(attribute: "discount_amount")
    baseDiscountAmount: Float @rename(attribute: "base_discount_amount")
    shippingTaxAmount: Float @rename(attribute: "shipping_tax_amount")
    baseShippingTaxAmount: Float @rename(attribute: "base_shipping_tax_amount")
    subTotalInclTax: Float @rename(attribute: "sub_total_incl_tax")
    baseSubTotalInclTax: Float @rename(attribute: "base_sub_total_incl_tax")
    shippingAmountInclTax: Float @rename(attribute: "shipping_amount_incl_tax")
    baseShippingAmountInclTax: Float @rename(attribute: "base_shipping_amount_incl_tax")
    formattedPrice: FormattedPrice @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Sales\\FormattedPrice@getInvoicePriceData")
    orderId: Int @rename(attribute: "order_id")
    transactionId: String @rename(attribute: "transaction_id")
    reminders: String
    nextReminderAt: String @rename(attribute: "next_reminder_at")
    createdAt: String @rename(attribute: "created_at")
    updatedAt: String @rename(attribute: "updated_at")
    order: Order! @belongsTo
    items: [InvoiceItem!] @hasMany
    customer: Customer @morphTo
    channel: Channel @morphTo
    address: Address @belongsTo
}

type InvoiceItem {
    id: ID!
    parentId:Int @rename(attribute: "parent_id")
    name: String
    description: String
    sku: String
    qty:Int
    price: Float!
    basePrice: Float! @rename(attribute: "base_price")
    total: Float!
    baseTotal: Float! @rename(attribute: "base_total")
    taxAmount: Float @rename(attribute: "tax_amount")
    baseTaxAmount: Float @rename(attribute: "base_tax_amount")
    discountPercent: Float @rename(attribute: "discount_percent")
    discountAmount: Float @rename(attribute: "discount_amount")
    baseDiscountAmount: Float @rename(attribute: "base_discount_amount")
    priceInclTax: Float @rename(attribute: "price_incl_tax")
    basePriceInclTax: Float @rename(attribute: "base_price_incl_tax")
    totalInclTax: Float @rename(attribute: "total_incl_tax")
    baseTotalInclTax: Float @rename(attribute: "base_total_incl_tax")
    productId: ID! @rename(attribute: "product_id")
    productType: String @rename(attribute: "product_type")
    orderItemId: ID! @rename(attribute: "order_item_id")
    invoiceId: ID! @rename(attribute: "invoice_id")
    additional: ItemAdditional @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Shop\\Common\\FilterItem@additional")
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt:DateTime @rename(attribute: "updated_at")
    formattedPrice: FormattedPrice @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Sales\\FormattedPrice@getInvoiceItemPriceData")
    invoice: Invoice @belongsTo(relation: "invoice")
    orderItem: OrderItem @belongsTo(relation: "order_item")
    product: Product! @belongsTo(relation: "product")
    children: [InvoiceItem] @hasMany
}
