# Sales\Order Related APIs
extend type Query @guard(with: ["admin-api"]) {
    orders(
        input: FilterOrderInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\Sales\\Orders\\FilterOrder")
    ): [Order!] @paginate(
        type: "PAGINATOR"
        defaultCount: 10
        model: "Webkul\\Sales\\Models\\Order"
    )

    order(id: ID @eq): Order @find(model: "Webkul\\Sales\\Models\\Order")

    orderInvoices(
        input: FilterOrderInvoiceInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\Sales\\Orders\\FilterOrderInvoice")
    ): [Invoice!] @paginate(
        type: "PAGINATOR"
        defaultCount: 10
        model: "Webkul\\Sales\\Models\\Invoice"
    )

    orderInvoice(id: ID @eq): Invoice @find(model: "Webkul\\Sales\\Models\\Invoice")

    orderShipments(
        input: FilterOrderShipmentInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\Sales\\Orders\\FilterOrderShipment")
    ): [Shipment!] @paginate(
        type: "PAGINATOR"
        defaultCount: 10
        model: "Webkul\\Sales\\Models\\Shipment"
    )

    orderShipment(id: ID @eq): Shipment @find(model: "Webkul\\Sales\\Models\\Shipment")

    orderRefunds(
        input: FilterOrderRefundInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\Sales\\Orders\\FilterOrderRefund")
    ): [Refund!] @paginate(
        type: "PAGINATOR"
        defaultCount: 10
        model: "Webkul\\Sales\\Models\\Refund"
    )

    orderRefund(id: ID @eq): Refund @find(model: "Webkul\\Sales\\Models\\Refund")
}

extend type Mutation @guard(with: ["admin-api"]) {
    cancelOrder(
        id: ID!
    ): CancelOrderResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Sales\\Orders\\OrderMutation@cancel")

    adminReorder(
        id: ID!
    ): OrderResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Sales\\Orders\\OrderMutation@reorder")
}

input FilterOrderInput {
    id: Int
    baseSubTotal: Float @rename(attribute: "base_sub_total")
    baseGrandTotal: Float @rename(attribute: "base_grand_total")
    orderDate: String @rename(attribute: "order_date")
    channelName: String @rename(attribute: "channel_name")
    status: String
    billedTo: String @rename(attribute: "billed_to")
    shippedTo: String @rename(attribute: "shipped_to")
}

input FilterOrderInvoiceInput {
    orderId: Int! @rename(attribute: "order_id")
    id: Int
    invoiceDate: String @rename(attribute: "invoice_date")
    customerName: String @rename(attribute: "customer_name")
    status: String
    amount: Float
}

input FilterOrderShipmentInput {
    orderId: Int! @rename(attribute: "order_id")
    id: Int
    shipmentDate: String @rename(attribute: "shipment_date")
    carrierTitle: String @rename(attribute: "carrier_title")
    trackingNumber: String @rename(attribute: "tracking_number")
    totalQty: Int @rename(attribute: "total_qty")
}

input FilterOrderRefundInput {
    orderId: Int! @rename(attribute: "order_id")
    id: Int
    refundDate: String @rename(attribute: "refund_date")
    customerName: String @rename(attribute: "customer_name")
    status: String
    refunded: Float
}

type Order {
    id: Int!
    incrementId: String @rename(attribute: "increment_id")
    status: String @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\OrderQuery@getTranslatedOrderStatus")
    channelName: String @rename(attribute: "channel_name")
    isGuest: Int @rename(attribute: "is_guest")
    customerEmail: String @rename(attribute: "customer_email")
    customerFirstName: String @rename(attribute: "customer_first_name")
    customerLastName: String @rename(attribute: "customer_last_name")
    shippingMethod: String @rename(attribute: "shipping_method")
    shippingTitle: String @rename(attribute: "shipping_title")
    shippingDescription: String @rename(attribute: "shipping_description")
    couponCode: String @rename(attribute: "coupon_code")
    isGift: Int @rename(attribute: "is_gift")
    totalItemCount: Int @rename(attribute: "total_item_count")
    totalQtyOrdered: Int @rename(attribute: "total_qty_ordered")
    baseCurrencyCode: String @rename(attribute: "base_currency_code")
    channelCurrencyCode: String @rename(attribute: "channel_currency_code")
    orderCurrencyCode: String @rename(attribute: "order_currency_code")
    grandTotal: Float @rename(attribute: "grand_total")
    baseGrandTotal: Float @rename(attribute: "base_grand_total")
    grandTotalInvoiced: Float @rename(attribute: "grand_total_invoiced")
    baseGrandTotalInvoiced: Float @rename(attribute: "base_grand_total_invoiced")
    grandTotalRefunded: Float @rename(attribute: "grand_total_refunded")
    baseGrandTotalRefunded: Float @rename(attribute: "base_grand_total_refunded")
    subTotal: Float @rename(attribute: "sub_total")
    baseSubTotal: Float @rename(attribute: "base_sub_total")
    subTotalInvoiced: Float @rename(attribute: "sub_total_invoiced")
    baseSubTotalInvoiced: Float @rename(attribute: "base_sub_total_invoiced")
    subTotalRefunded: Float @rename(attribute: "sub_total_refunded")
    baseSubTotalRefunded: Float @rename(attribute: "base_sub_total_refunded")
    discountPercent: Float @rename(attribute: "discount_percent")
    discountAmount: Float @rename(attribute: "discount_amount")
    baseDiscountAmount: Float @rename(attribute: "base_discount_amount")
    discountInvoiced: Float @rename(attribute: "discount_invoiced")
    baseDiscountInvoiced: Float @rename(attribute: "base_discount_invoiced")
    discountRefunded: Float @rename(attribute: "discount_refunded")
    baseDiscountRefunded: Float @rename(attribute: "base_discount_refunded")
    taxAmount: Float @rename(attribute: "tax_amount")
    baseTaxAmount: Float @rename(attribute: "base_tax_amount")
    taxAmountInvoiced: Float @rename(attribute: "tax_amount_invoiced")
    baseTaxAmountInvoiced: Float @rename(attribute: "base_tax_amount_invoiced")
    taxAmountRefunded: Float @rename(attribute: "tax_amount_refunded")
    baseTaxAmountRefunded: Float @rename(attribute: "base_tax_amount_refunded")
    shippingAmount: Float @rename(attribute: "shipping_amount")
    baseShippingAmount: Float @rename(attribute: "base_shipping_amount")
    shippingInvoiced: Float @rename(attribute: "shipping_invoiced")
    baseShippingInvoiced: Float @rename(attribute: "base_shipping_invoiced")
    shippingRefunded: Float @rename(attribute: "shipping_refunded")
    baseShippingRefunded: Float @rename(attribute: "base_shipping_refunded")
    shippingDiscountAmount: Float @rename(attribute: "shipping_discount_amount")
    baseShippingDiscountAmount: Float @rename(attribute: "base_shipping_discount_amount")
    shippingTaxAmount: Float @rename(attribute: "shipping_tax_amount")
    baseShippingTaxAmount: Float @rename(attribute: "base_shipping_tax_amount")
    shippingTaxRefunded: Float @rename(attribute: "shipping_tax_refunded")
    baseShippingTaxRefunded: Float @rename(attribute: "base_shipping_tax_refunded")
    subTotalInclTax: Float @rename(attribute: "sub_total_incl_tax")
    baseSubTotalInclTax: Float @rename(attribute: "base_sub_total_incl_tax")
    shippingAmountInclTax: Float @rename(attribute: "shipping_amount_incl_tax")
    baseShippingAmountInclTax: Float @rename(attribute: "base_shipping_amount_incl_tax")
    customerId: Int @rename(attribute: "customer_id")
    customerType: String @rename(attribute: "customer_type")
    channelId: Int @rename(attribute: "channel_id")
    channelType: String @rename(attribute: "channel_type")
    cartId: ID @rename(attribute: "cart_id")
    appliedCartRuleIds: String @rename(attribute: "applied_cart_rule_ids")
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
    formattedPrice: FormattedPrice @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Sales\\FormattedPrice@getOrderPriceData")
    items: [OrderItem!] @hasMany
    comments: [OrderComment] @hasMany
    downloadableLinkPurchased: [DownloadableLinkPurchased] @hasMany(relation: "downloadable_link_purchased")
    shipments: [Shipment] @hasMany
    invoices: [Invoice] @hasMany
    refunds: [Refund!] @hasMany (relation: "refunds")
    customer: Customer @morphTo
    addresses: [Address!] @hasMany
    payment: OrderPayment @hasOne
    billingAddress: Address! @rename(attribute: "billing_address")
    shippingAddress: Address @rename(attribute: "shipping_address")
    channel: Channel @belongsTo(relation: "channel")
}

type OrderComment {
    id: ID!
    orderId: ID! @rename(attribute: "order_id")
    comment: String
    customerNotified: Boolean! @rename(attribute: "customer_notified")
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
    order: Order! @belongsTo(relation: "order")
}

type OrderPayment {
    id: ID!
    orderId: ID @rename(attribute: "order_id")
    method: String!
    methodTitle: String @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\OrderQuery@getOrderPaymentTitle")
    additional: OrderPaymentAdditional @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\OrderQuery@getOrderPaymentAdditional")
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
}

type OrderPaymentAdditional {
    title: String
    value: String
}

type CancelOrderResponse {
    success: Boolean
    message: String
    order: Order
}

type OrderResponse {
    success: Boolean
    jumpToSection: String @rename(attribute: "jump_to_section")
    cart: Cart
    customerAddresses: Address @rename(attribute: "customer_addresses")
}
