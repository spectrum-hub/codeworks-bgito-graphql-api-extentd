# Sales\OrderItem Related APIs
extend type Query @guard(with: ["admin-api"]) {
    orderItems(
        input: FilterOrderItemInput!
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\CommonFilter")
    ): [OrderItem!] @paginate(
        type: "PAGINATOR"
        defaultCount:10
        model: "Webkul\\Sales\\Models\\OrderItem"
    )

    orderItem(
        id: ID @eq,
        input: FilterOrderItemInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\CommonFilter")
    ): OrderItem @find(model: "Webkul\\Sales\\Models\\OrderItem")
}

input FilterOrderItemInput {
    orderId: Int @rename(attribute: "order_id")
    id: Int
    sku: String
    type: String
    name: String
    weight: Float
    totalWeight: Float @rename(attribute: "total_weight")
    qtyOrdered: Float @rename(attribute: "qty_ordered")
    qtyShipped: Float @rename(attribute: "qty_shipped")
    qtyInvoiced: Float @rename(attribute: "qty_invoiced")
    qtyCanceled: Float @rename(attribute: "qty_canceled")
    qtyRefunded: Float @rename(attribute: "qty_refunded")
    price: Float
}

type OrderItem {
    id: ID!
    sku: String!
    type: String
    name: String
    couponCode: String @rename(attribute: "coupon_code")
    weight: Float!
    totalWeight: Float @rename(attribute: "total_weight")
    qtyOrdered: Int @rename(attribute: "qty_ordered")
    qtyShipped: Int @rename(attribute: "qty_shipped")
    qtyInvoiced: Int @rename(attribute: "qty_invoiced")
    qtyCanceled: Int @rename(attribute: "qty_canceled")
    qtyRefunded: Int @rename(attribute: "qty_refunded")
    price: Float!
    basePrice: Float! @rename(attribute: "base_price")
    total: Float!
    baseTotal: Float! @rename(attribute: "base_total")
    totalInvoiced: Float! @rename(attribute: "total_invoiced")
    baseTotalInvoiced: Float! @rename(attribute: "base_total_invoiced")
    amountRefunded: Float! @rename(attribute: "amount_refunded")
    baseAmountRefunded: Float! @rename(attribute: "base_amount_refunded")
    discountPercent: Float @rename(attribute: "discount_percent")
    discountAmount: Float @rename(attribute: "discount_amount")
    baseDiscountAmount: Float @rename(attribute: "base_discount_amount")
    discountInvoiced: Float @rename(attribute: "discount_invoiced")
    baseDiscountInvoiced: Float @rename(attribute: "base_discount_invoiced")
    discountRefunded: Float @rename(attribute: "discount_refunded")
    baseDiscountRefunded: Float @rename(attribute: "base_discount_refunded")
    taxPercent: Float @rename(attribute: "tax_percent")
    taxAmount: Float @rename(attribute: "tax_amount")
    baseTaxAmount: Float @rename(attribute: "base_tax_amount")
    taxAmountInvoiced: Float @rename(attribute: "tax_amount_invoiced")
    baseTaxAmountInvoiced: Float @rename(attribute: "base_tax_amount_invoiced")
    taxAmountRefunded: Float @rename(attribute: "tax_amount_refunded")
    baseTaxAmountRefunded: Float @rename(attribute: "base_tax_amount_refunded")
    priceInclTax: Float @rename(attribute: "price_incl_tax")
    basePriceInclTax: Float @rename(attribute: "base_price_incl_tax")
    totalInclTax: Float @rename(attribute: "total_incl_tax")
    baseTotalInclTax: Float @rename(attribute: "base_total_incl_tax")
    formattedPrice: FormattedPrice @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Sales\\FormattedPrice@getOrderItemPriceData")
    productId: ID! @rename(attribute: "product_id")
    productType: String @rename(attribute: "product_type")
    orderId: ID! @rename(attribute: "order_id")
    taxCategoryId: ID @rename(attribute: "tax_category_id")
    parentId: ID @rename(attribute: "parent_id")
    additional: ItemAdditional @field(resolver: "Webkul\\GraphQLAPI\\Queries\\Shop\\Common\\FilterItem@additional")
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
    order: Order! @belongsTo(relation: "order")
    product: Product @morphTo(relation: "product")
    child: OrderItem @hasOne
    parent: OrderItem @belongsTo(relation: "parent")
    children: [OrderItem] @hasMany(relation: "children")
    invoiceItems: [InvoiceItem] @hasMany(relation: "invoice_items")
    shipmentItems: [ShipmentItem] @hasMany(relation: "shipment_items")
    refundItems: [RefundItem] @hasMany(relation: "refund_items")
    downloadableLinkPurchased: DownloadableLinkPurchased @hasOne(relation: "downloadable_link_purchased")
}
