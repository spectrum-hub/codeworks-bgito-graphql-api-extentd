#Marketing\Event Related APIs
extend type Query @guard(with: ["admin-api"]) {
    events(
        input: FilterEventInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\CommonFilter")
    ): [Event!] @paginate(
        type: "PAGINATOR"
        defaultCount: 10
        model: "Webkul\\Marketing\\Models\\Event"
    )

    event(id: ID @eq): Event @find(model: "Webkul\\Marketing\\Models\\Event")
}

extend type Mutation @guard(with: ["admin-api"]) {
    createEvent(
        input: CreateEventInput! @spread
    ): EventResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Marketing\\Communications\\EventMutation@store")

    updateEvent(
        id: ID!,
        input: CreateEventInput! @spread
    ): EventResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Marketing\\Communications\\EventMutation@update")

    deleteEvent (id: ID!): StatusResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Marketing\\Communications\\EventMutation@delete")
}

input FilterEventInput {
    id: ID
    name: String
    description: String
    date: String
}

input CreateEventInput {
    name: String!
    description: String!
    date: String
}

type EventResponse {
    success: Boolean!
    message: String
    event: Event
}

type Event {
    id: ID!
    name: String!
    description: String!
    date: String
}
