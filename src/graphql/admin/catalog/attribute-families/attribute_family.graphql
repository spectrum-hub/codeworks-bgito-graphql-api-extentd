# Catalog\AttributeFamily Related APIs
extend type Query @guard(with: ["admin-api"]) {
    attributeGroups: [AttributeGroup!] @paginate(
        type: "PAGINATOR"
        defaultCount: 10
        model: "Webkul\\Attribute\\Models\\AttributeGroup"
    )

    attributeGroup(id: ID @eq): AttributeGroup @find(model: "Webkul\\Attribute\\Models\\AttributeGroup")

    attributeFamilies(
        input: FilterAttributeFamiliesInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Admin\\CommonFilter")
    ): [AttributeFamily!] @paginate(
        type: "PAGINATOR"
        defaultCount: 10
        model: "Webkul\\Attribute\\Models\\AttributeFamily"
    )

    attributeFamily(id: ID @eq): AttributeFamily @find(model: "Webkul\\Attribute\\Models\\AttributeFamily")
}

extend type Mutation @guard(with: ["admin-api"]) {
    createAttributeGroup(
        input: CreateAttributeGroupInput! @spread
    ): AttributeGroupResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Catalog\\AttributeFamilies\\AttributeGroupMutation@store")

    updateAttributeGroup(
        id: ID!,
        input: CreateAttributeGroupInput! @spread
    ): AttributeGroupResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Catalog\\AttributeFamilies\\AttributeGroupMutation@update")

    deleteAttributeGroup(
        id: ID!
    ): StatusResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Catalog\\AttributeFamilies\\AttributeGroupMutation@delete")

    createAttributeFamily(
        input: CreateAttributeFamilyInput @spread
    ): AttributeFamilyResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Catalog\\AttributeFamilies\\AttributeFamilyMutation@store")

    updateAttributeFamily(
        id: ID!,
        input: CreateAttributeFamilyInput @spread
    ): AttributeFamilyResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Catalog\\AttributeFamilies\\AttributeFamilyMutation@update")

    deleteAttributeFamily(
        id: ID!
    ): StatusResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Admin\\Catalog\\AttributeFamilies\\AttributeFamilyMutation@delete")
}

input CreateAttributeGroupInput {
    id: ID
    code: String!
    name: String!
    column: AttributeGroupColumn!
    position: Int!
    attributeFamilyId: ID @rename(attribute: "attribute_family_id")
    customAttributes: [CustomerAttributeInput] @rename(attribute: "custom_attributes")
}

enum AttributeGroupColumn {
    MAIN @enum(value: 1)
    RIGHT_SIDE @enum(value: 2)
}

input CustomerAttributeInput {
    id: Int!
    position: Int!
}

input CreateAttributeFamilyInput {
    code: String!
    name: String!
    attributeGroups: [CreateAttributeGroupInput!] @rename(attribute: "attribute_groups")
}

input FilterAttributeFamiliesInput {
    id: ID
    code: String
    name: String
}

type AttributeFamilyResponse {
    success: Boolean
    message: String
    attributeFamily: AttributeFamily @rename(attribute: "attribute_family")
}

type AttributeFamily {
    id: ID!
    code: String!
    name: String!
    status: Boolean
    isUserDefined: Boolean @rename(attribute: "is_user_defined")
    attributeGroups: [AttributeGroup!] @hasMany(relation: "attribute_groups")
}

type AttributeGroupResponse {
    success: Boolean
    message: String
    attributeGroup: AttributeGroup @rename(attribute: "attribute_group")
}

type AttributeGroup {
    id: ID!
    name: String!
    position: Int!
    isUserDefined: Boolean @rename(attribute: "is_user_defined")
    attributeFamilyId: ID! @rename(attribute: "attribute_family_id")
    customAttributes: [Attribute] @belongsTo(relation: "custom_attributes")
}
